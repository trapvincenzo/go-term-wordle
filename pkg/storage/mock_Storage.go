// Code generated by mockery v2.23.1. DO NOT EDIT.

package storage

import mock "github.com/stretchr/testify/mock"

// MockStorage is an autogenerated mock type for the Storage type
type MockStorage struct {
	mock.Mock
}

type MockStorage_Expecter struct {
	mock *mock.Mock
}

func (_m *MockStorage) EXPECT() *MockStorage_Expecter {
	return &MockStorage_Expecter{mock: &_m.Mock}
}

// GetWord provides a mock function with given fields:
func (_m *MockStorage) GetWord() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockStorage_GetWord_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetWord'
type MockStorage_GetWord_Call struct {
	*mock.Call
}

// GetWord is a helper method to define mock.On call
func (_e *MockStorage_Expecter) GetWord() *MockStorage_GetWord_Call {
	return &MockStorage_GetWord_Call{Call: _e.mock.On("GetWord")}
}

func (_c *MockStorage_GetWord_Call) Run(run func()) *MockStorage_GetWord_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockStorage_GetWord_Call) Return(_a0 string) *MockStorage_GetWord_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockStorage_GetWord_Call) RunAndReturn(run func() string) *MockStorage_GetWord_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockStorage interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockStorage creates a new instance of MockStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockStorage(t mockConstructorTestingTNewMockStorage) *MockStorage {
	mock := &MockStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
